-------------------------------------------- 27/07/19 --------------------------------------------
cd "C:\My\Desenv\My\CadFerias\cadferias"

ng new cadferias --routing --style=scss -S

cd "C:\My\Desenv\My\CadFerias\cadferias\frontend"
npm install bootstrap@latest --save
npm install ngx-bootstrap@latest --save

ng g m shared
ng g s shared/events --skipTests
ng g s shared/errors --skipTests
ng g s shared/guards/auth --skipTests
ng g s shared/guards/signout --skipTests
ng g s shared/guards/form-deactivate --skipTests
ng g class shared/common/base-component
ng g class shared/common/base-service
ng g class shared/common/base-form
ng g class shared/common/base-details
ng g class shared/common/base-list
ng g c shared/common/field-error-display --skipTests
ng g c shared/common/auditable --skipTests
ng g c shared/common/back-button --flat --inline-template --inline-style --skipTests
ng g interface shared/model/base-entity
ng g interface shared/model/vo/pagination-vo
//ng g c shared/template --skipTests
ng g c shared/page-not-found --skipTests
ng g c shared/invalid-access --skipTests
ng g c shared/confirm-modal --skipTests
ng g s shared/confirm-modal/confirm-modal --skipTests
ng g s shared/auth/token-storage --skipTests
ng g s shared/auth/auth --skipTests
ng g s shared/auth/auth-interceptor --skipTests
ng g directive shared/common/sort-table-field
ng g directive shared/common/only-numbers
ng g s shared/http-indicator --skipTests
ng g s shared/history --skipTests
ng g class shared/security/base-security-item
ng g c shared/security/security-item --flat -it -is --skipTests
ng g directive shared/security/security-item
ng g c home --skipTests
ng g m signin
ng g c signin-modal --skipTests
ng g s signin/signin --skipTests
ng g s users/users --skipTests
ng g interface shared/model/user
ng g m employees --routing
ng g c employees/employee-list --skipTests
ng g c employees/employee-form --skipTests
ng g c employees/employee-details --skipTests
ng g s employees/employees --skipTests
ng g s employees/guards/employee-resolver --skipTests
ng g interface shared/model/employee
ng g m staffs --routing
ng g c staffs/staff-list --skipTests
ng g c staffs/staff-form --skipTests
ng g c staffs/staff-details --skipTests
ng g s staffs/staffs --skipTests
ng g s staffs/guards/staff-resolver --skipTests
ng g interface shared/model/staff
ng g m vacations --routing
ng g c vacations/vacation-list --skipTests
ng g c vacations/vacation-form --skipTests
ng g c vacations/vacation-details --skipTests
ng g s vacations/vacations --skipTests
ng g s vacations/guards/vacation-resolver --skipTests
ng g interface shared/model/vacation

json-server --watch db.json
-------------------------------------------- 03/08/19 --------------------------------------------
cd "C:\My\Desenv\My\CadFerias\cadferias\frontend"
#ng add ngx-bootstrap  --component pagination
-------------------------------------------- 14/08/19 --------------------------------------------
#https://codepen.io/jtrumbull/pen/NGZxaz?editors=1000

#https://www.npmjs.com/package/angular-font-awesome
npm install --save font-awesome

-------------------------------------------- 17/08/19 --------------------------------------------
#https://github.com/mariohmol/ng-brazil
npm install --save ng-brazil js-brasil
npm i -S angular2-text-mask text-mask-addons

#https://www.npmjs.com/package/ngx-mask

-------------------------------------------- 24/08/19 --------------------------------------------
npm install --save jquery
npm install --save @types/jquery

#https://projects.lukehaas.me/css-loaders/#load5

#https://ng-select.github.io/ng-select#/search

-------------------------------------------- 25/08/19 --------------------------------------------
#https://github.com/ng-select/ng-select
#https://stackblitz.com/edit/ng-select

npm install --save @ng-select/ng-select

-------------------------------------------- 31/08/19 --------------------------------------------
http://localhost:8080/swagger-ui.html#/

-------------------------------------------- 01/09/19 --------------------------------------------

https://stackoverflow.com/questions/27501221/how-to-generate-random-string-with-no-duplicates-in-java
RandomStringUtils.randomAlphanumeric(8).toUpperCase() // for alphanumeric
RandomStringUtils.randomAlphabetic(8).toUpperCase() // for pure alphabets

-------------------------------------------- 07/09/19 --------------------------------------------

https://winterbe.com/posts/2018/08/29/migrate-maven-projects-to-java-11-jigsaw/
cd "C:\My\Desenv\My\CadFerias\cadferias\backend"
mvn versions:display-dependency-updates
mvn clean test-compile compile
java --list-modules


-------------------------------------------- 15/09/19 --------------------------------------------
cd "C:\My\Desenv\My\CadFerias\cadferias\backend"
mvn clean verify -DskipTests
java --enable-preview -jar target/cadferias-0.0.1-SNAPSHOT.jar

https://spring.io/blog/2015/06/08/cors-support-in-spring-framework
https://medium.com/@alexandremjacques/entendendo-o-cors-parte-2-e4172d6da206

-------------------------------------------- 28/09/19 --------------------------------------------

@Api("Endpoint utilizado para criação, recuperação, atualização e exclusão de usuários.")
@Validated
@RestController
@RequestMapping(path = "/users")
public class UserEndpoint extends BaseEndpoint<UserService, UserEntity, Long, UserFilterVO> {

	@ApiOperation("Verifica se o e-mail já foi cadastrado anteriormente.")
	@ResponseStatus(value = OK)
	@GetMapping(path = "validEmail")
	public boolean isValidEmail(@ApiParam("E-mail verificado.") @RequestParam @NotBlank @Email String email,
			@ApiParam("ID do usuário.") @RequestParam(required = false) Long userId) {
		return service.isValidEmail(email, userId);
	}

}

https://www.programcreek.com/java-api-examples/index.php?api=org.springframework.web.bind.MethodArgumentNotValidException

-------------------------------------------- 30/11/19 --------------------------------------------
cd "C:\My\Desenv\My\CadFerias\cadferias\backend"
mvn clean package -DskipTests
java -jar target/cadferias-0.0.1-SNAPSHOT.jar
http://localhost:8080/swagger-ui.html#/

cd "C:\My\Desenv\My\CadFerias\cadferias\frontend"
ng build --prod
ng build --configuration="heroku"

npm install http-server -g
http-server dist/cadferias -p 8081

-------------------------------------------- 01/12/19 --------------------------------------------
cd "C:\My\Desenv\My\CadFerias\cadferias"
git remote add origin https://github.com/cams7/cadferias.git
git remote -v
git pull origin master --allow-unrelated-histories
git push origin master

#https://devcenter.heroku.com/articles/deploying-spring-boot-apps-to-heroku
heroku login

cd "C:\My\Desenv\My\heroku-demo"
mvn clean package -DskipTests
java -jar target\heroku-demo-0.0.1-SNAPSHOT.jar
git init
git add .
git commit -m "first commit"
heroku create
git push heroku master
heroku open
heroku logs --tail
heroku addons:create heroku-postgresql
heroku config
heroku pg
git add .
git commit -m "foi criada o conexão do postgres"
https://cadfoto.herokuapp.com/swagger-ui.html
heroku ps
heroku ps:stop run.4859
heroku kill DYNO --app cadferias
heroku apps:rename cadferias


-------------------------------------------- 07/12/19 --------------------------------------------

#https://medium.com/code-sketch/how-to-deploy-an-angular-7-app-to-github-pages-9427b609645f
cd "C:\My\Desenv\My\CadFerias"
git clone https://github.com/cams7/cadferias.git -b master
cd "C:\My\Desenv\My\CadFerias\cadferias"
git branch -D gh-pages
git push origin --delete gh-pages
#https://www.christianengvall.se/git-reset-origin-master-to-commit/
git log --oneline -n 5
git reset --hard HASH-CODE
git push --force origin master
npm install -g angular-cli-ghpages
cd "C:\My\Desenv\My\CadFerias\cadferias\frontend"
npm install
ng build --configuration="heroku" --base-href https://cams7.github.io/cadferias/
cd "C:\My\Desenv\My\CadFerias\cadferias"
git checkout -b gh-pages
git push origin gh-pages
ngh --dir=frontend/dist/cadferias
git checkout master

---------------------------------------------------------------------------------------------------

cd "C:\My\Desenv\My\CadFerias\cadferias"
git ls-tree --full-tree -r HEAD
mvn clean package -DskipTests
mvn -DskipTests clean dependency:list install
java -jar backend\target\cadferias-0.0.1-SNAPSHOT.jar
heroku create cadferias --buildpack heroku/java
git push heroku master
heroku open
heroku logs --tail
heroku addons:create heroku-postgresql
heroku run psql -h ${HEROKU_DATABASE_HOST} -p 5432 -U ${HEROKU_DATABASE_USER} -d ${HEROKU_DATABASE_NAME}
${HEROKU_DATABASE_PASSWORD}

https://cadferias.herokuapp.com/swagger-ui.html

---------------------------------------------------------------------------------------------------

mvn clean package -Pdev -DskipTests -f "C:\My\Desenv\My\CadFerias\cadferias"
mvn clean package -Ptest -DskipTests -f "C:\My\Desenv\My\CadFerias\cadferias"
mvn clean package -DskipTests -f "C:\My\Desenv\My\CadFerias\cadferias"

java -jar C:\My\Desenv\My\CadFerias\cadferias\backend\target\cadferias-0.0.1-SNAPSHOT.jar

cd "C:\My\Desenv\My\CadFerias\cadferias\backend"
mvn -Pdev flyway:migrate -Dflyway.configFile=dev.flyway.properties
mvn clean package -Pdev -DskipTests -f "C:\My\Desenv\My\CadFerias\cadferias"
java -jar C:\My\Desenv\My\CadFerias\cadferias\backend\target\cadferias-0.0.1-SNAPSHOT.jar

cd "C:\My\Desenv\My\CadFerias\cadferias\backend"
mvn -Ptest flyway:migrate -Dflyway.configFile=test.flyway.properties
mvn clean package -Ptest -DskipTests -f "C:\My\Desenv\My\CadFerias\cadferias"
java -jar C:\My\Desenv\My\CadFerias\cadferias\backend\target\cadferias-0.0.1-SNAPSHOT.jar

cd "C:\My\Desenv\My\CadFerias\cadferias\frontend"
ng build --prod
http-server dist/cadferias -p 8081

-------------------------------------------- 08/12/19 --------------------------------------------

cd C:\Program Files\Oracle\VirtualBox
VBoxManage -v

vagrant --version

cd "C:\My\Desenv\My\CadFerias\Vagrant"
vagrant init
vagrant plugin install vagrant-vbguest
vagrant up --provider virtualbox
vagrant ssh
vagrant status
vagrant halt

#On centos/8
#https://github.com/NaturalHistoryMuseum/scratchpads2/wiki/Install-Docker-and-Docker-Compose-(Centos-7)
#Install Docker
#sudo yum install -y yum-utils device-mapper-persistent-data lvm2
#sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
#sudo yum install docker-ce
#sudo usermod -aG docker $(whoami)
#sudo systemctl enable docker.service
#sudo systemctl start docker.service
#https://linoxide.com/linux-how-to/how-to-install-docker-on-centos/
sudo dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
sudo dnf repolist -v
dnf list docker-ce --showduplicates | sort -r
sudo dnf -y  install docker-ce --nobest
sudo systemctl enable --now docker
systemctl status  docker
sudo usermod -aG docker $USER
id $USER
newgrp docker
docker version
docker pull alpine
docker images
docker run -it --rm alpine /bin/sh
apk update
exit
sudo systemctl disable firewalld
docker run -it --rm alpine /bin/sh
apk update
exit
docker ps -a
docker --version

#Install Docker Compose
sudo yum install -y epel-release
#sudo yum --enablerepo=extras install epel-release
#sudo yum info python*-pip
#sudo yum install -y python-pip
#https://linuxconfig.org/how-to-install-pip-in-redhat-8
#sudo dnf install -y python2-pip
#pip2 --version
sudo dnf install -y python3-pip
pip3 --version
pip3 search docker-compose
sudo pip3 install docker-compose
sudo dnf upgrade --nobest
#sudo yum upgrade python*
docker-compose version

---------------------------------------------------------------------------------------------------

#https://docs.docker.com/compose/gettingstarted/
cd ~/teste/composetest
docker-compose up
#http://127.0.0.1:5000
docker image ls

docker-compose up -d
docker-compose ps
docker-compose run web env
docker-compose stop
docker volume ls
docker-compose down --volumes

---------------------------------------------------------------------------------------------------
#https://medium.com/@renato.groffe/postgresql-docker-executando-uma-inst%C3%A2ncia-e-o-pgadmin-4-a-partir-de-containers-ad783e85b1a4
#https://medium.com/@renato.groffe/postgresql-pgadmin-4-docker-compose-montando-rapidamente-um-ambiente-para-uso-55a2ab230b89
cd /opt/cadferias/backend/db
docker-compose up -d
docker-compose ps
docker network ls
docker-compose run psql191208 env
docker-compose run pgadmin191208 env
#http://localhost:90

docker ps
docker logs db_psql191208_1
docker exec -ti db_psql191208_1 /bin/sh
su - postgres
psql
CREATE DATABASE cadferias;
select current_database();
\q
exit
pg_dump -U postgres -t tb_foto_funcionario --blobs -f dump_tb_foto_funcionario191208 cadferias
exit
docker cp db_psql191208_1:/dump_tb_foto_funcionario191208 /home/vagrant/teste/

#url:      jdbc:postgresql://localhost:5432/cadferias
#username: postgres
#password: abc@12345

cd /opt/cadferias/backend/db
docker-compose stop

-------------------------------------------- 14/12/19 --------------------------------------------

#https://spring.io/guides/gs/spring-boot-docker/
#On Windows 10
cd "C:\My\Desenv\My\CadFerias\teste"
git clone https://github.com/spring-guides/gs-spring-boot-docker.git
cd "C:\My\Desenv\My\CadFerias\teste\gs-spring-boot-docker\initial"
./mvnw package && java -jar target/gs-spring-boot-docker-0.1.0.jar
cd "C:\My\Desenv\My\CadFerias\teste\gs-spring-boot-docker\complete"
./mvnw package
mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)
#On Centos/8
cd "C:\My\Desenv\My\CadFerias\Vagrant"
vagrant up
vagrant ssh
cd /home/vagrant/teste/gs-spring-boot-docker/initial
docker build -t springio/gs-spring-boot-docker .
docker images
docker run -p 8080:8080 -t springio/gs-spring-boot-docker
docker run -e "SPRING_PROFILES_ACTIVE=prod" -p 8080:8080 -t springio/gs-spring-boot-docker
docker run -e "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n" -p 8080:8080 -p 5005:5005 -t springio/gs-spring-boot-docker
#http://localhost:9080/
cd /home/vagrant/teste/gs-spring-boot-docker/complete
docker build -t springio/gs-spring-boot-docker2 .
docker run -d -p 8080:8080 -t springio/gs-spring-boot-docker2
docker ps
docker logs amazing_curie
docker exec -ti amazing_curie /bin/sh
docker stop amazing_curie
docker rm amazing_curie
docker images
docker rmi springio/gs-spring-boot-docker2
docker rmi springio/gs-spring-boot-docker

---------------------------------------------------------------------------------------------------
#On Windows 10
cd "C:\My\Desenv\My\CadFerias\cadferias\backend"
./mvnw clean package -Ptest -DskipTests 
#On Centos/8
cd /opt/cadferias/backend
docker build --build-arg JAR_FILE=target/cadferias-0.0.1-SNAPSHOT.jar -t br.com.cams7/cadferias-backend:0.0.1-SNAPSHOT .
docker run --name=cadferias-backend191214 -d -p 8080:8080 --network cadferias_network191214 -e "JAVA_OPTS=-Ddebug -Xmx128m" -e "SPRING_PROFILES_ACTIVE=test" -e "JDBC_DATABASE_URL=jdbc:postgresql://psql191208:5432/cadferias" -e "JDBC_DATABASE_USERNAME=postgres" -e "JDBC_DATABASE_PASSWORD=abc@12345"  br.com.cams7/cadferias-backend:0.0.1-SNAPSHOT
docker logs -f cadferias-backend191214
docker exec -ti cadferias-backend191214 /bin/sh
docker stop cadferias-backend191214 && docker rm cadferias-backend191214 && docker rmi br.com.cams7/cadferias-backend:0.0.1-SNAPSHOT
docker ps -a
docker images

cd /opt/cadferias/frontend
docker build -t br.com.cams7/http-server ./docker/http-server
docker build -t br.com.cams7/cadferias-frontend:0.0.1-SNAPSHOT .
docker run --name=cadferias-frontend191214 -d -p 3000:3000 --network cadferias_network191214 br.com.cams7/cadferias-frontend:0.0.1-SNAPSHOT
docker logs -f cadferias-frontend191214
docker exec -ti cadferias-frontend191214 /bin/sh
docker stop cadferias-frontend191214 && docker rm cadferias-frontend191214 && docker rmi br.com.cams7/cadferias-frontend:0.0.1-SNAPSHOT
---------------------------------------------------------------------------------------------------
#On Windows 10
mvn clean package -Ptest -DskipTests -f "C:\My\Desenv\My\CadFerias\cadferias\backend"
cd "C:\My\Desenv\My\CadFerias\cadferias\backend"
./mvnw clean package -Ptest -DskipTests
cd "C:\My\Desenv\My\CadFerias\cadferias\frontend"
ng build --prod
#On Centos/8
cd /opt/cadferias
docker-compose up -d
docker-compose up --build -d
docker-compose ps
docker network ls
docker logs -f cadferias_backend191214_1
docker exec -ti cadferias_backend191214_1 /bin/sh
docker logs -f cadferias_frontend191214_1
docker exec -ti cadferias_frontend191214_1 /bin/sh
cat /etc/os-release
curl -X POST "http://backend191214:8080/api/auth/signin" -H "accept: application/json;charset=UTF-8" -H "Content-Type: application/json;charset=UTF-8" -d "{\"email\": \"jorge78@teste.com\", \"password\": \"abc12345\"}"
docker-compose stop && docker-compose rm -f

http://localhost:9080/swagger-ui.html






